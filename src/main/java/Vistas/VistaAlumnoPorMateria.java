package Vistas;

import Entidades.Alumno;
import Entidades.InscripcionData;
import Entidades.Materia;
import Entidades.MateriaData;
import Utilidades.ComboBox;
import Utilidades.Tabla;
import java.util.List;
import java.util.concurrent.CompletableFuture;
import javax.swing.table.DefaultTableModel;

public class VistaAlumnoPorMateria extends javax.swing.JInternalFrame {

  /**
   * Creates new form VistaAlumnoPorMateria
   */
  public VistaAlumnoPorMateria() {
    initComponents();
    // MateriaData materiaData = new MateriaData();
    // List<Materia> materias = materiaData.listarMateria();
    // ComboBox.llenar(comboMaterias, materias);
    // comboMaterias.setSelectedIndex(-1);

    // Creamos las cabeceras para la tabla "tablaAlumnosPorMateria" usando el
    // método estático de la clase Tabla
    Tabla.crearCabeceras(tablaAlumnosPorMateria, modelo, new String[]{"ID", "DNI", "Apellido", "Nombre"}, new int[]{50, 100, 300, 300});

    // Ejecuta la tarea de carga de materias en un hilo separado para no
    // bloquea la interfaz de usuario. Cuando la carga está completada llena el
    // JComboBox
    CompletableFuture.supplyAsync(() -> {
      MateriaData materiaData = new MateriaData();
      List<Materia> materias = materiaData.listarMateria();

      return materias;
    }).thenAccept(materias -> {
      ComboBox.llenar(comboMaterias, materias);
    });
  }

  /**
   * This method is called from within the constructor to initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is always
   * regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    jLabel1 = new javax.swing.JLabel();
    comboMaterias = new javax.swing.JComboBox<>();
    jScrollPane1 = new javax.swing.JScrollPane();
    tablaAlumnosPorMateria = new javax.swing.JTable();

    setClosable(true);
    setTitle("Listado de Alumnos por Materia");

    jLabel1.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
    jLabel1.setText("Seleccione una materia:");

    comboMaterias.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
    comboMaterias.addItemListener(new java.awt.event.ItemListener() {
      public void itemStateChanged(java.awt.event.ItemEvent evt) {
        comboMateriasItemStateChanged(evt);
      }
    });

    tablaAlumnosPorMateria.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
    tablaAlumnosPorMateria.setModel(new javax.swing.table.DefaultTableModel(
      new Object [][] {
        {null, null, null, null},
        {null, null, null, null},
        {null, null, null, null},
        {null, null, null, null}
      },
      new String [] {
        "Title 1", "Title 2", "Title 3", "Title 4"
      }
    ));
    jScrollPane1.setViewportView(tablaAlumnosPorMateria);

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addGap(88, 88, 88)
        .addComponent(jLabel1)
        .addGap(18, 18, 18)
        .addComponent(comboMaterias, javax.swing.GroupLayout.PREFERRED_SIZE, 430, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addContainerGap(88, Short.MAX_VALUE))
      .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 731, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addGap(19, 19, 19))
    );
    layout.setVerticalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addGap(19, 19, 19)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(jLabel1)
          .addComponent(comboMaterias, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addGap(18, 18, 18)
        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 455, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addContainerGap(19, Short.MAX_VALUE))
    );

    pack();
  }// </editor-fold>//GEN-END:initComponents

  private void comboMateriasItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboMateriasItemStateChanged

    // Vacía la JTable
    Tabla.limpiarTabla(modelo);

    // Obtiene el id de la materia seleccionada del JComboBox
    int id = ((Materia) comboMaterias.getSelectedItem()).getIdMateria();

    // Obtiene de la base de datoslos alumnos que cursan la materia seleccionada
    InscripcionData inscripcionData = new InscripcionData();
    List<Alumno> alumnosPorMateria = inscripcionData.obtenerAlumnosPorMateria(id);

    // Por cada alumno obtenido de la base de datos crea una nueva fila en la
    // JTable
    alumnosPorMateria.forEach(alumno -> modelo.addRow(new Object[]{alumno.getIdAlumno(), alumno.getDni(), alumno.getApellido(), alumno.getNombre()}));
  }//GEN-LAST:event_comboMateriasItemStateChanged

  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JComboBox<Materia> comboMaterias;
  private javax.swing.JLabel jLabel1;
  private javax.swing.JScrollPane jScrollPane1;
  private javax.swing.JTable tablaAlumnosPorMateria;
  // End of variables declaration//GEN-END:variables

  // Crea un nuevo modelo para la JTable
  private final DefaultTableModel modelo = new DefaultTableModel() {
    @Override
    public boolean isCellEditable(int row, int col) {
      return false;
    }
  };
}
