/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vistas;

import Entidades.Alumno;
import Entidades.AlumnoData;
import static Utilidades.Regex.validarRegex;

import java.time.LocalDate;
import java.time.ZoneId;
import java.util.Date;
import javax.swing.JOptionPane;

/**
 *
 * @author pc202
 */
public class VistaAlumnos extends javax.swing.JInternalFrame {

    /**
     * Creates new form VistaAlumnos
     */
    public VistaAlumnos() {
        initComponents();
        jBLimpiar.setEnabled(false);
        jBGuardar.setEnabled(false);
        jBEliminar.setEnabled(false);
        jBBuscar.setEnabled(false);
        jRBEstado.setSelected(true);
        jRBEstado.setEnabled(true);
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField4 = new javax.swing.JTextField();
        jLDocumento = new javax.swing.JLabel();
        jLApellido = new javax.swing.JLabel();
        jLNombre = new javax.swing.JLabel();
        jLEstado = new javax.swing.JLabel();
        jLFechaNacimiento = new javax.swing.JLabel();
        jBLimpiar = new javax.swing.JButton();
        jBEliminar = new javax.swing.JButton();
        jBGuardar = new javax.swing.JButton();
        jTFDocumento = new javax.swing.JTextField();
        jTFApellido = new javax.swing.JTextField();
        jTFNombre = new javax.swing.JTextField();
        jBBuscar = new javax.swing.JButton();
        jRBEstado = new javax.swing.JRadioButton();
        jCFecha = new com.toedter.calendar.JDateChooser();

        jTextField4.setText("jTextField4");

        setClosable(true);
        setTitle("Alumno");

        jLDocumento.setText("Documento:");

        jLApellido.setText("Apellido:");

        jLNombre.setText("Nombre:");

        jLEstado.setText("Estado:");

        jLFechaNacimiento.setText("Fecha de Nacimiento:");

        jBLimpiar.setText("Limpiar");
        jBLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBLimpiarActionPerformed(evt);
            }
        });

        jBEliminar.setText("Eliminar");
        jBEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBEliminarActionPerformed(evt);
            }
        });

        jBGuardar.setText("Guardar");
        jBGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBGuardarActionPerformed(evt);
            }
        });

        jTFDocumento.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTFDocumentoKeyReleased(evt);
            }
        });

        jTFApellido.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTFApellidoKeyReleased(evt);
            }
        });

        jTFNombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTFNombreKeyReleased(evt);
            }
        });

        jBBuscar.setText("Buscar");
        jBBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBBuscarActionPerformed(evt);
            }
        });

        jCFecha.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jCFechaPropertyChange(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLApellido)
                    .addComponent(jLNombre)
                    .addComponent(jLEstado)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jLFechaNacimiento)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jCFecha, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(jBLimpiar)
                                        .addGap(18, 18, 18))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(jLDocumento)
                                        .addGap(57, 57, 57)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jRBEstado)
                                    .addComponent(jTFDocumento, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTFNombre, javax.swing.GroupLayout.DEFAULT_SIZE, 152, Short.MAX_VALUE)
                                    .addComponent(jTFApellido)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(28, 28, 28)
                                        .addComponent(jBEliminar)))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBGuardar)
                        .addGap(40, 40, 40)
                        .addComponent(jBBuscar)))
                .addContainerGap(42, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLDocumento)
                            .addComponent(jTFDocumento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jBBuscar))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLApellido)
                            .addComponent(jTFApellido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(23, 23, 23)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLNombre)
                            .addComponent(jTFNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 24, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLEstado)
                            .addComponent(jRBEstado))
                        .addGap(22, 22, 22)
                        .addComponent(jLFechaNacimiento))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jCFecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBLimpiar)
                    .addComponent(jBEliminar)
                    .addComponent(jBGuardar))
                .addGap(20, 20, 20))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

  private void jBGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBGuardarActionPerformed
        // TODO add your handling code here:
        if (alumnoActual == null) {
            Date fechaDate = jCFecha.getDate();
            LocalDate fechaNac = fechaDate.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
            String apellido = jTFApellido.getText().trim();
            String nombre = jTFNombre.getText().trim();
            int documento = Integer.parseInt(jTFDocumento.getText().trim());

            Alumno alumno = new Alumno(documento, apellido, nombre, fechaNac, true);
            aData.guardarAlumno(alumno);
            JOptionPane.showMessageDialog(this, "Alumno Guardado");
            limpiarCampos();
        } else {
            Integer documento = Integer.valueOf(jTFDocumento.getText().trim());
            Date fechaDate = jCFecha.getDate();
            LocalDate fechaNac = fechaDate.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();

            alumnoActual.setDni(documento);
            alumnoActual.setApellido(jTFApellido.getText().trim());
            alumnoActual.setNombre(jTFNombre.getText().trim());
            System.out.println("estado: " + jRBEstado.isSelected());

            alumnoActual.setEstado(jRBEstado.isSelected());
            alumnoActual.setFechaNac(fechaNac);
            aData.modificarAlumno(alumnoActual);
            System.out.println(alumnoActual);
            JOptionPane.showMessageDialog(this, "Alumno Modificado");
            limpiarCampos();
        }

  }//GEN-LAST:event_jBGuardarActionPerformed

    private void jBLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBLimpiarActionPerformed
        // TODO add your handling code here:
        limpiarCampos();
    }//GEN-LAST:event_jBLimpiarActionPerformed

    private void jTFDocumentoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTFDocumentoKeyReleased
        // TODO add your handling code here:
        chequearCampos();

    }//GEN-LAST:event_jTFDocumentoKeyReleased

    private void jTFApellidoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTFApellidoKeyReleased
        // TODO add your handling code here:
        chequearCampos();

    }//GEN-LAST:event_jTFApellidoKeyReleased

    private void jTFNombreKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTFNombreKeyReleased
        // TODO add your handling code here:
        chequearCampos();
    }//GEN-LAST:event_jTFNombreKeyReleased

    private void jBEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBEliminarActionPerformed
        // TODO add your handling code here:
        if (alumnoActual != null) {
            aData.eliminarAlumno(alumnoActual.getIdAlumno());
            JOptionPane.showMessageDialog(this, "Alumno Eliminado.");
            limpiarCampos();
        } else {
            JOptionPane.showMessageDialog(this, "No se encontro el alumno para eliminar");
        }

    }//GEN-LAST:event_jBEliminarActionPerformed

    private void jCFechaPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jCFechaPropertyChange
        // TODO add your handling code here:
        if ("date".equals(evt.getPropertyName())) {
            chequearCampos();
        }
    }//GEN-LAST:event_jCFechaPropertyChange

    private void jBBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBBuscarActionPerformed
        // TODO add your handling code here:
        Integer documento = Integer.valueOf(jTFDocumento.getText().trim());
        alumnoActual = aData.buscarAlumnoPorDni(documento);
        if (alumnoActual != null) {
            Date fecha = Date.from(alumnoActual.getFechaNac().atStartOfDay(ZoneId.systemDefault()).toInstant());
            jTFNombre.setText(alumnoActual.getNombre());
            jTFApellido.setText(alumnoActual.getApellido());
            jRBEstado.setSelected(alumnoActual.isEstado());
            jCFecha.setDate(fecha);
            System.out.println(alumnoActual);
        } else {
            JOptionPane.showMessageDialog(this, "Alumno no encontrado");
        }
    }//GEN-LAST:event_jBBuscarActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBBuscar;
    private javax.swing.JButton jBEliminar;
    private javax.swing.JButton jBGuardar;
    private javax.swing.JButton jBLimpiar;
    private com.toedter.calendar.JDateChooser jCFecha;
    private javax.swing.JLabel jLApellido;
    private javax.swing.JLabel jLDocumento;
    private javax.swing.JLabel jLEstado;
    private javax.swing.JLabel jLFechaNacimiento;
    private javax.swing.JLabel jLNombre;
    private javax.swing.JRadioButton jRBEstado;
    private javax.swing.JTextField jTFApellido;
    private javax.swing.JTextField jTFDocumento;
    private javax.swing.JTextField jTFNombre;
    private javax.swing.JTextField jTextField4;
    // End of variables declaration//GEN-END:variables

    private AlumnoData aData = new AlumnoData();
    private Alumno alumnoActual = null;

    private void limpiarCampos() {
        jCFecha.setCalendar(null);
        alumnoActual = null;
        jRBEstado.setSelected(true);
        jBLimpiar.setEnabled(false);
        jBGuardar.setEnabled(false);
        jBEliminar.setEnabled(false);
        jBBuscar.setEnabled(false);
        jTFApellido.setText(" ");
        jTFNombre.setText(" ");
        jTFDocumento.setText(" ");
    }

    private void chequearCampos() {

        //OBTENER CAMPOS
        String documento = jTFDocumento.getText().trim();
        String apellido = jTFApellido.getText().trim();
        String nombre = jTFNombre.getText().trim();
        Date fechaDate = jCFecha.getDate();

        // EXPRESIONES REGULARES PARA VALIDAR DOCUMENTO, NOMBRE Y APELLIDO
        String documentoRegex = "^[1-9]\\d{0,7}$";
        String nombreApellidoRegex = "^[^\\d]+$";

        //VALIDAR CAMPOS
        boolean documentoValido = !documento.isEmpty() && validarRegex(documentoRegex, documento);
        boolean apellidoValido = !apellido.isEmpty() && validarRegex(nombreApellidoRegex, apellido);
        boolean nombreValido = !nombre.isEmpty() && validarRegex(nombreApellidoRegex, nombre);
        boolean fechaValida = fechaDate != null;

        boolean validado = documentoValido && apellidoValido && nombreValido && fechaValida;

        //HABILITAR BOTONES GUARDAR Y ELIMINAR SI TODOS LOS CAMPOS SON VALIDOS
        jBLimpiar.setEnabled(true);
        jBGuardar.setEnabled(validado);
        jBEliminar.setEnabled(validado);

        //MOSTRAR ERROR ESPECIFICO SEGUN EL CAMPO
        if (!documento.isEmpty() && !documentoValido) {
            JOptionPane.showMessageDialog(this, "Código no válido, solo números enteros y hasta 8 dígitos");
        } else if (!apellido.isEmpty() && !apellidoValido) {
            JOptionPane.showMessageDialog(this, "El apellido no puede contener números");
        } else if (!nombre.isEmpty() && !nombreValido) {
            JOptionPane.showMessageDialog(this, "El nombre no puede contener números");
        }

        //HABILITAR BOTON BUSCAR SI EL DOCUMENTO ES VALIDO
        if (documentoValido) {
            jBBuscar.setEnabled(true);
        } else {
            jBBuscar.setEnabled(false);

        }

        //DESHABILITAR EL BOTON NUEVO SI LOS CAMPOS ESTAN VACIOS
        if (documento.isEmpty() && apellido.isEmpty() && nombre.isEmpty() && fechaDate == null) {
            jBLimpiar.setEnabled(false);
        }
    }
}
